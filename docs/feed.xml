<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-01-26T00:43:41+07:00</updated><id>/feed.xml</id><title type="html">Reinhart Previano K.</title><subtitle>Blog repository</subtitle><entry><title type="html">Say hello to blog posts on reinhart1010.github.io</title><link href="/updates/2021/01/25/Say-hello-to-blog-posts-on-reinhart1010.github.io.html" rel="alternate" type="text/html" title="Say hello to blog posts on reinhart1010.github.io" /><published>2021-01-25T00:00:00+07:00</published><updated>2021-01-25T00:00:00+07:00</updated><id>/updates/2021/01/25/Say-hello-to-blog-posts-on-reinhart1010.github.io</id><content type="html" xml:base="/updates/2021/01/25/Say-hello-to-blog-posts-on-reinhart1010.github.io.html">&lt;p&gt;Blog posts are one of the most common features of a personal website, showcasing personal works and interests. Now it’s avaliable in reinhart1010.github.io, directly from the home page.&lt;/p&gt;

&lt;p&gt;These blog posts are originally scattered across different places, from the &lt;a href=&quot;https://www.openstreetmap.org/diary&quot;&gt;OpenStreetMap User Diaries&lt;/a&gt; to &lt;a href=&quot;https://kotakode.com/blogs&quot;&gt;Kotakode&lt;/a&gt; to &lt;a href=&quot;https://twitter.com/reinhart1010&quot;&gt;Twitter&lt;/a&gt; to &lt;a href=&quot;http://reinhart1010.blog.binusian.org&quot;&gt;@reinhart1010 at BINUSIAN Blog&lt;/a&gt;. Yes, that list stil does not mention other (micro)blogging platforms such as &lt;a href=&quot;https://quora.com&quot;&gt;Quora&lt;/a&gt;, &lt;a href=&quot;https://telegra.ph&quot;&gt;telegra.ph&lt;/a&gt;, Telegram channels, and so on. Starting today, my articles from those sites will be migrated and unified in my GitHub repository, https://github.com/reinhart1010/reinhart1010.github.io (Hint: It’s powered by Jekyll).&lt;/p&gt;

&lt;p&gt;Stay tuned for updates and improvements to this site, as well as the process which makes this possible.&lt;/p&gt;</content><author><name></name></author><category term="updates" /><summary type="html">Blog posts are one of the most common features of a personal website, showcasing personal works and interests. Now it’s avaliable in reinhart1010.github.io, directly from the home page.</summary></entry><entry><title type="html">Mengenal lebih dalam tentang HTML Document Object Model (DOM)</title><link href="/web-development/2020/12/19/Mengenal-lebih-dalam-tentang-HTML-Document-Object-Model-(DOM).html" rel="alternate" type="text/html" title="Mengenal lebih dalam tentang HTML Document Object Model (DOM)" /><published>2020-12-19T00:00:00+07:00</published><updated>2020-12-19T00:00:00+07:00</updated><id>/web-development/2020/12/19/Mengenal-lebih-dalam-tentang-HTML-Document-Object-Model-(DOM)</id><content type="html" xml:base="/web-development/2020/12/19/Mengenal-lebih-dalam-tentang-HTML-Document-Object-Model-(DOM).html">&lt;p&gt;Dalam mempelajari bahasa pemrograman JavaScript, Anda mungkin pernah diminta untuk mengubah tampilan sebuah tag HTML secara dinamis. Misalnya, sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; yang memiliki teks yang berubah-ubah setiap detiknya, atau sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; yang memiliki &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-color&lt;/code&gt; yang dapat diubah oleh pengguna setelah pengguna tersebut memasukkan warna baru dalam tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt; dan menge-klik sebuah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt;. Masalah-masalah tersebut sering diselesaikan menggunakan JavaScript, namun untuk memahami cara elemen-elemen HTML tersebut diubah Anda perlu mempelajari konsep dan sistem Document Object Model (DOM). Melalui entri blog ini, saya akan membahas tentang DOM dan bagaimana hal tersebut dapat dipakai untuk mengubah atribut-atribut HTML secara mudah.&lt;/p&gt;

&lt;p&gt;Saya akan memulainya dengan sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; yang berisikan teks “Hello, World!”. Sangat sederhana, bukan?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/kotakode-prod-public/images/76c51829-4ff1-4ffe-9932-22ef029a229b-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tag tersebut tentunya dapat dipercantik lagi dalam mengubah jenis font, warna, posisi/lokasi, dan sebagainya. Saya juga percaya bahwa Anda sering menggunakan CSS untuk mengubahnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/kotakode-prod-public/images/bed18d11-7a8f-4790-9f82-9b776827e204-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi, sebagai sebuah tag HTML saya seharusnya juga dapat mengubah isi teks yang ada di dalam tersebut, atau memuat tag-tag HTML baru di dalamnya, misalnya dari sekedar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt; menjadi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;Hello &amp;lt;i&amp;gt;JavaScript&amp;lt;/i&amp;gt;!&amp;lt;/h1&amp;gt;&lt;/code&gt;. Setelah mengganti warna dalam tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tersebut, saya dapat membuatnya menjadi seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/kotakode-prod-public/images/af64e206-3228-444b-aa61-c5db2a240254-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dan terakhir, melalui JavaScript saya seharusnya dapat menambahkan &lt;em&gt;event trigger&lt;/em&gt; dalam tag tersebut. Misalnya, jika saya menge-klik tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; ini, maka saya dapat menampilkan sebuah pesan &lt;em&gt;alert&lt;/em&gt; dengan pesan “Halo Semuanya!”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/kotakode-prod-public/images/5025f898-bc5e-4f08-bc43-ea87832f3165-image.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika Anda pernah mempelajari tentang konsep pemrograman berbasis objek (&lt;em&gt;Object-Oriented Programming&lt;/em&gt;/OOP), Anda tentunya paham bahwa setiap objek dapat memiliki berbagai atribut dan fungsi (&lt;em&gt;method&lt;/em&gt;). Kabar baiknya adalah, bahasa pemrograman JavaScript sebenarnya sudah menerapkan konsep ini dalam mengolah sebuah dokumen HTML, melalui sebuah model bernama &lt;strong&gt;Document Object Model (DOM)&lt;/strong&gt;. Dalam Document Object Model, setiap tag HTML (termasuk tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; sendiri) dapat direpresentasikan sebagai sebuah objek yang memiliki atribut dan fungsi yang dapat saya kategorikan menjadi lima hal berikut:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kelima istilah ini &lt;strong&gt;bukan&lt;/strong&gt; merupakan istilah standar yang dipakai dalam &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/&quot;&gt;spesifikasi DOM yang disahkan oleh W3C&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;W3C (The World-Wide Web Consortium)&lt;/strong&gt; merupakan sebuah lembaga konsorsium internasional yang melakukan standarisasi terhadap teknologi web yang dipakai di seluruh dunia, termasuk spesifikasi HTML, CSS, dan JS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Atribut&lt;/strong&gt;: jenis tag, nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class&lt;/code&gt;, dan atribut khusus, seperti atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loop&lt;/code&gt; dalam sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; atau &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt; untuk dapat memutarkan audio/video tersebut secara berulang.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Isi&lt;/strong&gt;: memuat isi dari tag tersebut, baik berupa teks biasa maupun teks yang mengandung tag HTML di dalamnya.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tampilan&lt;/strong&gt;: memuat aturan tampilan yang berlaku atas tag tersebut, layaknya atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div style=&quot;&quot;&amp;gt;&lt;/code&gt; dalam HTML murni maupun aturan yang ada di dalam file CSS.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fungsi/Method&lt;/strong&gt;: menjalankan salah satu fungsi atau &lt;em&gt;method&lt;/em&gt; yang dimiliki oleh tag tersebut, seperti memutar sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt; secara langsung.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Event Trigger&lt;/strong&gt;: menjalankan fungsi atau perintah tertentu berdasarkan &lt;em&gt;event&lt;/em&gt; atau kejadian yang terjadi dalam tag tersebut, di antaranya:
    &lt;ul&gt;
      &lt;li&gt;Saat tag tersebut di-klik atau ditekan (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onclick&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;Saat tag tersebut, khususnya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, telah terisi (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oninput&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;Saat pengguna menekan kombinasi &lt;em&gt;keyboard&lt;/em&gt; tertentu, seperti “WASD” dalam sebuah permainan (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onkeyboardinput&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;Saat tag tersebut dipilih/di-&lt;em&gt;select&lt;/em&gt; untuk disalin/di-&lt;em&gt;copy&lt;/em&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oncopy&lt;/code&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Selain DOM, JavaScript juga memiliki beberapa obyek/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Object&lt;/code&gt; khusus yang memuat informasi tentang tampilan/&lt;em&gt;viewport&lt;/em&gt;, jenis peramban/&lt;em&gt;web browser&lt;/em&gt;, bahkan preferensi pengguna seperti bahasa utama yang dipakai (&lt;em&gt;default language&lt;/em&gt;). Sebagian orang menyebutnya sebagai &lt;strong&gt;Browser Object Model (BOM)&lt;/strong&gt;, meskipun istilah tersebut jarang muncul dalam spesifikasi resmi oleh W3C.&lt;/p&gt;

&lt;p&gt;Setidaknya terdapat empat &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Object&lt;/code&gt; utama yang memenuhi kriteria tersebut, dan karena itu Anda tidak dapat membuat sebuah variabel JavaScript dengan nama-nama ini:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document&lt;/code&gt;: Memuat informasi tentang (keseluruhan) dokumen HTML itu sendiri. Objek ini memiliki beberapa fungsi di antaranya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.getElementById()&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelector()&lt;/code&gt; yang akan saya bahas nanti.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window&lt;/code&gt;: Memuat informasi tentang jendela &lt;em&gt;viewport&lt;/em&gt; di mana HTML tersebut ditampilkan/di-&lt;em&gt;render&lt;/em&gt;. Anda dapat mengubah nilai dari atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.location&lt;/code&gt; untuk membuat sebah &lt;em&gt;redirect&lt;/em&gt;, dan menggunakan fungsi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.open()&lt;/code&gt; untuk membuka sebuah situs atau URI di tab atau jendela/&lt;em&gt;window&lt;/em&gt; yang terpisah.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;navigator&lt;/code&gt;: Memuat informasi tentang jenis dan preferensi peramban web (&lt;em&gt;web browser&lt;/em&gt;) dan memuat beberapa API khusus seperti Geolocation API dan Web Share API. Salah satu atribut (bersifat &lt;em&gt;read-only&lt;/em&gt;) yang terdapat dalam objek ini adalah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;navigator.userAgent&lt;/code&gt;, yang berfungsi untuk mendeteksi jenis peramban (Chrome, Firefox, Safari, dll.), jenis OS (Windows, macOS, Linux, Android, iOS), bahkan mengecek apakah website tersebut diakses menggunakan perangkat &lt;em&gt;smartphone&lt;/em&gt; atau &lt;em&gt;tablet&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console&lt;/code&gt;: Memuat beberapa fungsi untuk menampilkan teks di dalam Web Console. Jika anda sebelumnya pernah memakai JavaScript dalam Node.js, Anda mungkin pernah menggunakan perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log()&lt;/code&gt; untuk melakukan hal tersebut. Dalam pemrograman website, Console ini hanya akan dimunculkan dalam panel &lt;strong&gt;Web Inspector&lt;/strong&gt;, yang dapat digunakan untuk melakukan &lt;em&gt;logging&lt;/em&gt; terhadap pesan-pesan galat/&lt;em&gt;error&lt;/em&gt; yang terjadi di dalam website tersebut.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nah, kembali ke topik soal DOM. Jika saya ingin mengubah isi dan tampilan teks &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; dari “Hello, World!”, Anda mungkin terbiasa untuk menambahkan atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; ke dalam tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;1&amp;gt;&lt;/code&gt; tersebut, menjadi&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;teks1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hello, World!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Untuk mengubah isi teks &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello, World&lt;/code&gt; menjadi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello &amp;lt;i&amp;gt;JavaScript&amp;lt;/i&amp;gt;!&lt;/code&gt;, saya dapat menggunakan perintah &lt;strong&gt;document.getElementById(“teks1”)&lt;/strong&gt; untuk mencari elemen HTML dengan atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; bernilai “teks1”. Hasilnya ya tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tadi. Jangan lupa untuk menyimpan objek tersebut (objek &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Element&lt;/code&gt;) ke dalam sebuah variabel, misalnya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elemenHtml&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elemenHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;teks1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Objek yang terkandung di dalam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elemenHtml&lt;/code&gt; ini memiliki atribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;innerHTML&lt;/code&gt; untuk mengatur isi dari elemen tersebut. Saat ini, nilai dari &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elementHtml.innerHTML&lt;/code&gt; adalah “Hello, World!”, dan di sini kita dapat mengubahnya dengan menjalankan perintah&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;elemenHtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello &amp;lt;i&amp;gt;JavaScript&amp;lt;/i&amp;gt;!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Catatan&lt;/strong&gt;: Jika elemen tersebut memiliki atribut lain, misalnya &lt;i class=&quot;color-red&quot;&gt;, kamu harus melakukan salah satu dari dua hal ini:&lt;/i&gt;&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;Mengganti karakter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; di dalam tag HTML tersebut menjadi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&quot;&lt;/code&gt; (Escaped character), misalnya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Hello &amp;lt;i class=\&quot;color-red\&quot;&amp;gt;JavaScript&amp;lt;/i&amp;gt;!&quot;&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;Mengganti karakter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; di awal dan akhir string HTML menjadi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'&lt;/code&gt; atau ```, misalnya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'Hello &amp;lt;i class=&quot;color-red&quot;&amp;gt;JavaScript&amp;lt;/i&amp;gt;!'&lt;/code&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seluruh atribut tampilan/&lt;em&gt;style&lt;/em&gt; CSS pun dapat diakses dan dimodifikasi di dalam objek ini. Jika saya ingin mengganti teks menjadi warna putih (foreground) di atas merah (background), maka saya harus menjalankan perintah&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;elemenHtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#ffffff&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;//Sebelumnya &quot;black&quot; atau &quot;#000000&quot; atau &quot;inherit&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;elemenHtml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#ff0000&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Sebelumnya &quot;none&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dalam baris kode JavaScript terakhir, nama atribut yang digunakan untuk mengubah atribut warna latar belakang (&lt;em&gt;background color&lt;/em&gt;) elemen tersebut adalah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;backgroundColor&lt;/code&gt;, bukan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-color&lt;/code&gt; (layaknya dalam menulis kode CSS). Hal ini karena simbol “-“ dalam JavaScript merupakan salah satu simbol operator aritmetik. Karena itu, penamaan atribut tampilan di JavaScript menggunakan &lt;em&gt;style&lt;/em&gt; seperti itu.&lt;/p&gt;

&lt;p&gt;Selain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.getElementById()&lt;/code&gt;, bahasa pemrograman JavaScript juga memiliki beberapa perintah lain untuk memilih elemen HTML berdasarkan nama tag (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.getElementsByTagName()&lt;/code&gt;) dan nama class (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.getElementsByClassName()&lt;/code&gt;). Setiap Class dan nama (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, dsb.) di HTML dapat dipakai di dalam lebih dari satu tag, karena itu kedua fungsi ini akan mengembalikan sekumpulan objek &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Element&lt;/code&gt; yang masih dapat diakses layaknya sebuah Array (misal: menggunakan fungsi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array.forEach()&lt;/code&gt;). Bahasa JavaScript juga memiliki fitur &lt;strong&gt;Query Selector&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelector()&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelectorAll()&lt;/code&gt;) yang berfungsi untuk memilih elemen HTML berdasarkan &lt;em&gt;query&lt;/em&gt; yang sering dipakai di dalam CSS untuk mengatur tampilan elemen tersebut, misalnya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#home div.card&lt;/code&gt; untuk memilih sebuah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;div class=&quot;card&quot;&amp;gt;&lt;/code&gt; yang berada di dalam sebuah elemen dengan ID &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;home&lt;/code&gt;. Anda mungkin pernah menggunakan fitur ini dalam library &lt;strong&gt;JQuery&lt;/strong&gt; melalui perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$(&quot;#home div.card&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nah, demikianlah penjelasan saya tentang DOM untuk saat ini. Menurut saya, DOM sendiri akan cukup mudah untuk dipelajari jika Anda pernah mengubah atribut-atribut HTML baik melalui CSS maupun meng-edit tag HTML itu sendiri. Jika Anda ingin mengetahui jenis Methods atau Events yang dapat dimiliki oleh tag HTML tertentu, Anda dapat melihat keseluruhan dokumentasi tag tersebut di situs &lt;a href=&quot;https://mdn.mozilla.org&quot;&gt;MDN (Mozilla Developer Network) Web Docs&lt;/a&gt; yang cukup lengkap dibandingkan situs lainnya, misalnya W3Schools.com. Misalnya, saya dapat mengunjungi laman https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#Events untuk melihat jenis-jenis Event (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onplay&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oncomplete&lt;/code&gt;, dll.) yang terdapat dalam sebuah tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;video&amp;gt;&lt;/code&gt;. Sampai jumpa di entri blog berikutnya!&lt;/p&gt;</content><author><name></name></author><category term="web-development" /><category term="indonesian" /><category term="html" /><category term="javascript" /><summary type="html">Dalam mempelajari bahasa pemrograman JavaScript, Anda mungkin pernah diminta untuk mengubah tampilan sebuah tag HTML secara dinamis. Misalnya, sebuah tag &amp;lt;p&amp;gt; yang memiliki teks yang berubah-ubah setiap detiknya, atau sebuah tag &amp;lt;div&amp;gt; yang memiliki background-color yang dapat diubah oleh pengguna setelah pengguna tersebut memasukkan warna baru dalam tag &amp;lt;input&amp;gt; dan menge-klik sebuah &amp;lt;button&amp;gt;. Masalah-masalah tersebut sering diselesaikan menggunakan JavaScript, namun untuk memahami cara elemen-elemen HTML tersebut diubah Anda perlu mempelajari konsep dan sistem Document Object Model (DOM). Melalui entri blog ini, saya akan membahas tentang DOM dan bagaimana hal tersebut dapat dipakai untuk mengubah atribut-atribut HTML secara mudah.</summary></entry><entry><title type="html">Surat Terbuka untuk Rapat Komti School of Computer Science</title><link href="/binusian/2019/12/13/Surat-Terbuka-untuk-Rapat-Komti-School-of-Computer-Science.html" rel="alternate" type="text/html" title="Surat Terbuka untuk Rapat Komti School of Computer Science" /><published>2019-12-13T00:00:00+07:00</published><updated>2019-12-13T00:00:00+07:00</updated><id>/binusian/2019/12/13/Surat-Terbuka-untuk-Rapat-Komti-School-of-Computer-Science</id><content type="html" xml:base="/binusian/2019/12/13/Surat-Terbuka-untuk-Rapat-Komti-School-of-Computer-Science.html">&lt;p&gt;Multikulturalisme itu sangat penting untuk dijaga masyarakat Indonesia. Demikian juga berlaku untuk para programmer Indonesia. Karena itu, kita harus menghargai dan menghormati masyarakat Indonesia yang memutuskan untuk menggunakan perangkat dan sistem komputer yang berbeda-beda.&lt;/p&gt;

&lt;p&gt;Ketidaktersediaan fungsi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strupr()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strlwr()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strrev()&lt;/code&gt;, serta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conio.h&lt;/code&gt; di algo.binus (dan SOCS1 Online Quiz) telah mengajari saya untuk menghormati keberagaman para compiler bahasa C dan sistem operasi yang ada. Fungsi-2 tersebut tidak ada di algo.binus karena memang tidak ada dalam GNU C Compiler (GCC) dan Linux yang dipakai oleh sistem algo.binus. Kebetulan, sebelumnya laptop saya sudah dual-boot antara Windows dan Linux sehingga saya bisa mendekatkan diri untuk mengerjakan tugas socs1 secara baik dan benar.&lt;/p&gt;

&lt;p&gt;Untuk kalian semua (para Dosen &amp;amp; mahasiswa), mari kita budayakan pembuatan software yang multikultural, menghargai perbedaan keunikan dan keterbatasan antar sistem dan perangkat komputer yang ada. Hal tersebut sudah cukup merefleksikan kebiasaan masyarakat Indonesia dan dunia, yang menggunakan beragam software dan layanan yang berbeda seperti Windows vs Linux dan macOS, Android vs iOS, Chrome vs Firefox, WhatsApp vs LINE, MS Office vs Google Drive, dan sebagainya. Dengan demikian, kita dapat menunjukan kebhinekaan Indonesia terhadap dunia melalui perkembangan teknologi informasi dan komunikasi.&lt;/p&gt;

&lt;p&gt;Dan terakhir dan terpenting, selain penghijauan bumi kita juga harus menghijaukan algo.binus dan SOCS1 Online Quiz demi masa depan yang lebih baik.&lt;/p&gt;</content><author><name></name></author><category term="binusian" /><category term="indonesian" /><summary type="html">Multikulturalisme itu sangat penting untuk dijaga masyarakat Indonesia. Demikian juga berlaku untuk para programmer Indonesia. Karena itu, kita harus menghargai dan menghormati masyarakat Indonesia yang memutuskan untuk menggunakan perangkat dan sistem komputer yang berbeda-beda.</summary></entry><entry><title type="html">Food Navigator</title><link href="/binusian/openstreetmap/2019/10/30/Food-Navigator.html" rel="alternate" type="text/html" title="Food Navigator" /><published>2019-10-30T00:00:00+07:00</published><updated>2019-10-30T00:00:00+07:00</updated><id>/binusian/openstreetmap/2019/10/30/Food-Navigator</id><content type="html" xml:base="/binusian/openstreetmap/2019/10/30/Food-Navigator.html">&lt;p&gt;&lt;strong&gt;Kunjungi langsung di https://reinhart1010.github.io/foodnavigator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Food Navigator adalah salah satu webapp sederhana yang menunjukkan lokasi restoran terdekat. Cukup pilih salah satu titik dan detail restoran tersebut akan muncul secara instan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808403-319ec000-1df2-11ea-9016-da62adc756c4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;latar-belakang&quot;&gt;Latar Belakang&lt;/h2&gt;
&lt;p&gt;Ide ini muncul dari suatu kesalahan dalam publikasi &lt;a href=&quot;https://drive.google.com/file/d/166TokJAsSh4MXmaX1VmHaL1Zvtosft8w/view&quot;&gt;Warta Jemaat Penerimaan Mahasiswa Baru 2019&lt;/a&gt; &lt;a href=&quot;http://scdc.binus.ac.id/po&quot;&gt;PO BINUS&lt;/a&gt;, yang menyertakan gambar denah restoran sekitar kampus Kemanggisan (Anggrek, Kijang, Syahdan) dalam resolusi yang sangat rendah. Alhasil, sebagian besar teks dan legenda restoran tersebut tidak dapat terlihat dengan jelas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808436-43806300-1df2-11ea-9584-35a94998a13a.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian, sebagai salah satu &lt;a href=&quot;https://www.openstreetmap.org/user/Reinhart%20Previano&quot;&gt;kontributor OpenStreetMap&lt;/a&gt; saya mulai mencoba menerapkan tag baru di Indonesia, di antaranya yang menyangkut metode pembayaran (kartu debit, kartu kredit, dll.) serta pesan-antar (delivery). Saya sebelumnya juga mempublikasikan beberapa artikel di OpenStreetMap, di antaranya (dalam bahasa inggris):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mapping Indonesian Payment Systems and Proposal for New Payment Tags&lt;/li&gt;
  &lt;li&gt;Testing Delivery Subkeys for Food-Ordering Apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Terakhir, desain menu “buka melalui aplikasi” awalnya dirancang untuk situs acara &lt;a href=&quot;https://web.archive.org/web/20191030053755/https://hacktoberfest.mtcbin.us/&quot;&gt;Hacktoberfest 2019 @BINUS&lt;/a&gt; (diarsipkan melalui &lt;a href=&quot;https://www.archive.org/&quot;&gt;Internet Archive&lt;/a&gt;) yang diselenggarakan oleh Mobile Tech Community BINUS (serta DigitalOcean dan DEV). Kode sumber situs tersebut tersedia dalam &lt;a href=&quot;https://web.archive.org/web/20191030053755/https://hacktoberfest.mtcbin.us/&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808624-a96cea80-1df2-11ea-808c-8831ccc000ad.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;fitur-dasar&quot;&gt;Fitur Dasar&lt;/h2&gt;
&lt;p&gt;Dalam versi pertama ini, ada beberapa fitur dasar yang dapat dinikmati secara langsung. Pertama, situs ini &lt;strong&gt;juga bisa berfungsi di tempat-tempat di luar seluruh kampus BINUS yang ada&lt;/strong&gt;, seperti Australia, Jepang, bahkan Walt Disney World (Amerika Serikat)!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808669-bf7aab00-1df2-11ea-85ca-9e5de20a28c6.png&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808675-c86b7c80-1df2-11ea-9625-287232205397.png&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808687-cbff0380-1df2-11ea-9f15-a5d812083f72.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ini semua bisa terjadi karena database restoran yang ditampilkan berasal dari &lt;a href=&quot;https://www.openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; melalui &lt;a href=&quot;http://overpass-api.de/&quot;&gt;OverPass API&lt;/a&gt;, yang memungkinkan pencarian data tempat di OpenStreetMap secara cepat.&lt;/p&gt;

&lt;p&gt;Kemudian, ada beberapa restoran yang sudah memiliki detail pembayaran yang lengkap, mulai dari tunai sampai non-tunai. &lt;strong&gt;Fitur ini pasti akan membantu kalian untuk mencari restoran yang bisa dapat cashback. Benar, kan?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808781-fea8fc00-1df2-11ea-83c0-a615adeabb51.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Data seperti fasilitas, metode pembayaran tersebut juga dicatat melalui OpenStreetMap. Misalnya, untuk Bakmi Effata saya bisa menambahkan tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:gopay_id=yes&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:grabfood=yes&lt;/code&gt; untuk menandakan bahwa restoran tersebut dapat menerima pembayaran melalui GoPay dan pesan antar melalui GrabFood. (selengkapnya di https://www.openstreetmap.org/node/6924753117)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/17312341/70808806-0d8fae80-1df3-11ea-8a38-41b64e218fa8.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika kalian meng-klik tombol &lt;strong&gt;Open With…&lt;/strong&gt;, ada menu khusus yang menunggu kalian. Selain melihat lokasi restoran tersebut di situs/aplikasi peta pilihan (misalnya Google Maps), kalian juga bisa meng-klik &lt;strong&gt;tombol GoFood dan GrabFood untuk langsung pesan melalui aplikasi masing-masing&lt;/strong&gt;. Dan seperti yang kalian lihat pada gambar di atas, link tersebut tersimpan dalam &lt;em&gt;tag&lt;/em&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:gofood:ref&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:grabfood:ref&lt;/code&gt; dalam data OpenStreetMap.&lt;/p&gt;

&lt;h2 id=&quot;ketersediaan-data&quot;&gt;Ketersediaan Data&lt;/h2&gt;
&lt;p&gt;Saat ini, ada beberapa data tempat yang belum lengkap. Misalnya, di sekitar Kemanggisan, baru ada beberapa tempat saja yang dicatat:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A&amp;amp;W (BINUS Anggrek)*&lt;/li&gt;
  &lt;li&gt;Ayam Geprek Pak Gembus^&lt;/li&gt;
  &lt;li&gt;Bakso Agung*&lt;/li&gt;
  &lt;li&gt;Baso Aci Juara^&lt;/li&gt;
  &lt;li&gt;Caldera Fried Chicken*&lt;/li&gt;
  &lt;li&gt;Crossroads Cafe (BINUS Anggrek)*&lt;/li&gt;
  &lt;li&gt;Chatime^&lt;/li&gt;
  &lt;li&gt;D’COST&lt;/li&gt;
  &lt;li&gt;Dhapu Kupi*&lt;/li&gt;
  &lt;li&gt;Gulu-Gulu^&lt;/li&gt;
  &lt;li&gt;Happy Bowl^&lt;/li&gt;
  &lt;li&gt;Janji Jiwa^&lt;/li&gt;
  &lt;li&gt;Food Court BINUS Kijang&lt;/li&gt;
  &lt;li&gt;Food Court Lt. 5 BINUS Anggrek&lt;/li&gt;
  &lt;li&gt;KFC&lt;/li&gt;
  &lt;li&gt;Mucca*&lt;/li&gt;
  &lt;li&gt;PomPom*&lt;/li&gt;
  &lt;li&gt;Pondok Maem*&lt;/li&gt;
  &lt;li&gt;Restoran Padang ACC*&lt;/li&gt;
  &lt;li&gt;Seblak Raos*&lt;/li&gt;
  &lt;li&gt;Starbucks (BINUS Anggrek)*&lt;/li&gt;
  &lt;li&gt;Warung Ibu Febri*&lt;/li&gt;
  &lt;li&gt;Yume Tei*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*Belum Lengkap, ^Hampir Lengkap&lt;/p&gt;

&lt;p&gt;Kalian bisa juga menambahkan data baru melalui OpenStreetMap, dan setiap pembaruan pada &lt;a href=&quot;https://www.openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; akan tersedia dalam Food Navigator secara instan. Ke depannya, saya akan membuat panduan singkat untuk menambahkan tag khusus yang kompatibel dengan Food Navigator. &lt;strong&gt;Selamat (nyari) makan!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kunjungi langsung di https://reinhart1010.github.io/foodnavigator&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="binusian" /><category term="openstreetmap" /><category term="init-import" /><category term="indonesian" /><summary type="html">Kunjungi langsung di https://reinhart1010.github.io/foodnavigator</summary></entry><entry><title type="html">Testing Delivery Subkeys for Food-Ordering Apps</title><link href="/openstreetmap/2019/09/25/Testing-Delivery-Subkeys-for-Food-Ordering-Apps.html" rel="alternate" type="text/html" title="Testing Delivery Subkeys for Food-Ordering Apps" /><published>2019-09-25T00:00:00+07:00</published><updated>2019-09-25T00:00:00+07:00</updated><id>/openstreetmap/2019/09/25/Testing-Delivery-Subkeys-for-Food-Ordering-Apps</id><content type="html" xml:base="/openstreetmap/2019/09/25/Testing-Delivery-Subkeys-for-Food-Ordering-Apps.html">&lt;p&gt;As you might have noticed, OpenStreetMap offers the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery=&lt;/code&gt; tags/keys to tag places and restaurants which offers food deliveries. But, have you ever wondered how to tag those who do not have their own delivery service, but they &lt;strong&gt;do&lt;/strong&gt; accept orders from &lt;strong&gt;food-ordering and delivery apps&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;I have seen this case multiple times on small restaurants in Indonesia which indirectly accepts delivery service from &lt;a href=&quot;https://www.gojek.com/gofood&quot;&gt;GoFood&lt;/a&gt; and &lt;a href=&quot;https://www.grab.com/id/grabfood&quot;&gt;GrabFood&lt;/a&gt;. Sure that there are other similar services available in the world including &lt;a href=&quot;https://melbsc.com.au&quot;&gt;MelbSC&lt;/a&gt; (Australia), Deliveroo (multiple countries), &lt;a href=&quot;https://www.foodora.com&quot;&gt;Foodora/Foodpanda&lt;/a&gt; (multiple countries), &lt;a href=&quot;https://www.ubereats.com&quot;&gt;UberEats&lt;/a&gt; (multiple countries), &lt;a href=&quot;https://www.just-eat.com&quot;&gt;Just Eat&lt;/a&gt; (multiple countries), as well as &lt;a href=&quot;https://sp.demae-can.com/&quot;&gt;Demae-can&lt;/a&gt; (Japan).&lt;/p&gt;

&lt;p&gt;So, why not we tag these services into OpenStreetMap the same way as &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Key:payment&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:*=&lt;/code&gt; tags&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;The rules are simple. For every food delivery apps that one place accepts, tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:&amp;lt;app or service name&amp;gt;=yes&lt;/code&gt;. For example, if one accepts both GoFood and GrabFood mentioned earlier, give both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:gofood=yes&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:grabfood=yes&lt;/code&gt; respectively. If the place does not have their own delivery service, as originally intended in the &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Key:delivery&quot;&gt;wiki&lt;/a&gt;, tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery=no&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some users might want to quickly find the place in respective food delivery apps. To ease that workflow, I suggest to add a sub-subkey named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;delivery:&amp;lt;app or service name&amp;gt;:ref=&lt;/code&gt;, which stores the URL or URI of the food delivery website/app. Using URL/URIs for this will be much easier for mapping, rather than finding and obtaining respective “restaurant ID”s similar to &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Key:wikidata&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wikidata=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Key:wikipedia&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wikipedia=&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="openstreetmap" /><category term="init-import" /><category term="english" /><summary type="html">As you might have noticed, OpenStreetMap offers the delivery= tags/keys to tag places and restaurants which offers food deliveries. But, have you ever wondered how to tag those who do not have their own delivery service, but they do accept orders from food-ordering and delivery apps?</summary></entry><entry><title type="html">Upgrading Transjakarta Networks to Public Transport V2 Schema</title><link href="/openstreetmap/2019/06/21/Upgrading-Transjakarta-Networks-to-Public-Transport-V2-Schema.html" rel="alternate" type="text/html" title="Upgrading Transjakarta Networks to Public Transport V2 Schema" /><published>2019-06-21T00:00:00+07:00</published><updated>2019-06-21T00:00:00+07:00</updated><id>/openstreetmap/2019/06/21/Upgrading-Transjakarta-Networks-to-Public-Transport-V2-Schema</id><content type="html" xml:base="/openstreetmap/2019/06/21/Upgrading-Transjakarta-Networks-to-Public-Transport-V2-Schema.html">&lt;p&gt;I am currently working to improve Transjakarta, one of Jakarta’s major BRT/Busway operators, to comply with &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Public_transport&quot;&gt;Public Transport Version 2 schema&lt;/a&gt; in OpenStreetMap, though Version 3 is &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Proposed_features/Refined_Public_Transport&quot;&gt;being purposed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://webcompat.com/uploads/2019/6/ec6b8b53-3b66-42b1-a4c6-c86233dbd82a.jpeg&quot; alt=&quot;image&quot; /&gt;
&lt;em&gt;Before and After map of Transjakarta Corridor 9 route, between Pluit and Penjaringan bus stops&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;legacy-tags-that-id-like-to-keep-for-compatibility&quot;&gt;Legacy Tags that I’d like to keep for compatibility:&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amenity=bus_stop&lt;/code&gt; for PTV1 compatibility on bus stations&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corridorXX=yes&lt;/code&gt;: assigns which Transjakarta corridors are served, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corridor9=yes&lt;/code&gt; for Corridor 9 and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corridor12=yes&lt;/code&gt; for Corridor 12 (see Implementation Notes if you are a developer utilising this tag for queries)&lt;/li&gt;
  &lt;li&gt;HOTOSM InAWARE tags&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network=Transjakarta&lt;/code&gt;, now also reinforced with&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network:wikidata&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wikidata&lt;/code&gt; values&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shelter=yes&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shelter_tj=yes&lt;/code&gt; (see Implementation Notes if you are a developer utilising this tag for queries)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;things-i-removed&quot;&gt;Things I REMOVED&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service=TransJakarta&lt;/code&gt;, since this is unacceptable by Osmose and other QA tools (see Implementation Notes if you are a developer utilizing this tag for queries)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;new-things-that-i-added&quot;&gt;New things that I added&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bus=yes&lt;/code&gt; to meet PTV2 requirements for bus&lt;/li&gt;
  &lt;li&gt;Route relation-specific additions:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;New route relations will be added for Corridor sub-routes (e.g. Corridor 1A, 9M, etc.), night services (e.g. M1 for Corridor 1; though I’ll consult with other OSM Public Transport implementations in other places)&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Duplicating roads since many Transjakarta networks operate on one-way roads&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network:wikidata=Q1671143&lt;/code&gt; for Transjakarta, then add &lt;a href=&quot;https://www.wikidata.org&quot;&gt;Wikidata&lt;/a&gt; values for each route relation, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wikidata=Q12492249&lt;/code&gt; for Corridor 5&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_transport:version=2&lt;/code&gt; to enable JOSM and Osmose debugging&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Shelter/station-specific additions:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Stations may now be represented as a Relation for those which have split platforms and/or multiple objects in OSM, such as in some Corridor 9 stations which are split by toll roads/expressways&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Transit-Oriented Development (TOD) areas are now represented as a separate Relation to connect multiple stations serving different networks&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;covered=yes&lt;/code&gt;, since Transjakarta stations are fully covered (in conjunction to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shelter=yes&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;departures_board=realtime&lt;/code&gt; since all Transjakarta stations (except Metrotrans, Miktrotrans, and Royaltrans services) have a live bus timetable, which can also be accessible through API at http://api.jakarta.go.id&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_transport=stop_position&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_transport=platform&lt;/code&gt;, see PTV2 on &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Public_transport&quot;&gt;OSM wiki&lt;/a&gt; for specific implementation&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smoking=no&lt;/code&gt; due to government laws, though not necessarily applied to all stops and stations across Jakarta&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheelchair=yes/dedicated/partial/no&lt;/code&gt; (optional)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;implementation-notes-for-apps-and-services&quot;&gt;Implementation Notes (for apps and services)&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Please use the Route Relation instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corridorXX=yes&lt;/code&gt; for network queries. After checking on taginfo.openstreetmap.org most of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;corridorXX&lt;/code&gt; tags are only used in Indonesia.&lt;/li&gt;
  &lt;li&gt;Additionally, you may include hard-coded Relation IDs which belong to Transjakarta network.&lt;/li&gt;
  &lt;li&gt;Please use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;highway=*&lt;/code&gt; and Transjakarta Route Relation IDs instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service=TransJakarta&lt;/code&gt; to query roads which belongs to Transjakarta, as some parts of the routes do NOT have a separate road (or Kassel Kerbs)&lt;/li&gt;
  &lt;li&gt;Please use Transjakarta Route Relation objects with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;role=platform&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;role=stop_position&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shelter_tj&lt;/code&gt;, as some Transjakarta (especially Royaltrans and Metrotrans) networks do stop at regular bus stations.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="openstreetmap" /><category term="init-import" /><category term="english" /><summary type="html">I am currently working to improve Transjakarta, one of Jakarta’s major BRT/Busway operators, to comply with Public Transport Version 2 schema in OpenStreetMap, though Version 3 is being purposed.</summary></entry><entry><title type="html">Mapping Indonesian Payment Systems and Proposal for New Payment Tags</title><link href="/openstreetmap/2019/04/20/Mapping-Indonesian-Payment-Systems-and-Proposal-for-New-Payment-Tags.html" rel="alternate" type="text/html" title="Mapping Indonesian Payment Systems and Proposal for New Payment Tags" /><published>2019-04-20T00:00:00+07:00</published><updated>2019-04-20T00:00:00+07:00</updated><id>/openstreetmap/2019/04/20/Mapping-Indonesian-Payment-Systems-and-Proposal-for-New-Payment-Tags</id><content type="html" xml:base="/openstreetmap/2019/04/20/Mapping-Indonesian-Payment-Systems-and-Proposal-for-New-Payment-Tags.html">&lt;p&gt;&lt;em&gt;This post is neither created nor endorsed by companies involved in establishment of payment systems listed below.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The OpenStreetMap &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/Key:payment&quot;&gt;payment:&lt;/a&gt; tag allows mappers to tag stores that accept certain payment methods (cash, debit and credit cards, etc.). Currently, the wiki&lt;/p&gt;

&lt;h1 id=&quot;whats-new&quot;&gt;What’s new?&lt;/h1&gt;
&lt;p&gt;First, let me introduce five new tags: three of them are dedicated to Indonesia’s newly-established &lt;strong&gt;GPN&lt;/strong&gt; (Gerbang Pembayaran Nasional, &lt;em&gt;literally&lt;/em&gt; National Payment Gateway). Currently it is a debit card switching network, similar to that of VISA and MasterCard (Maestro). Here, I propose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:gpn_debit&lt;/code&gt; to be used in all merchants accepting GPN debit cards.&lt;/p&gt;

&lt;p&gt;The Indonesian government has plans to replace existing payment networks in Indonesia with GPN, so does with credit cards and mobile wallets (e.g. Apple Pay and Google Pay). I am proposing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:gpn_credit&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:gpn_qris&lt;/code&gt; to be reserved for later use. The latter refers to the QR Indonesian Standard (QRIS) payment, similar to the &lt;a href=&quot;http://www.mas.gov.sg/sgqr/index.html&quot;&gt;SGQR&lt;/a&gt; system in Singapore.&lt;/p&gt;

&lt;p&gt;The rest of these tags are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:akulaku&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:grabpay&lt;/code&gt;, reserved for Akulaku Pay and GrabPay. Both payment systems are currently used in multiple countries across Southeast Asia. In Indonesia, GrabPay has merged to Indonesian digital wallet app &lt;a href=&quot;https://ovo.id&quot;&gt;OVO&lt;/a&gt;, so merchants using OVO-GrabPay QR code sticker (see below) should be tagged with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:grabpay=yes&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_ovo=yes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://webcompat.com/uploads/2019/4/14b82196-e716-4ff7-b42c-430ed4387ca4.jpeg&quot; alt=&quot;OVO-GrabPay merchant sticker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a bunch of other proposed tags prefixed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_*&lt;/code&gt; (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_ovo&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_gopay&lt;/code&gt;). This prefix is used for payment services operating only in Indonesia, to avoid trademark conflicts with other countries, such as Indonesia’s &lt;a href=&quot;https://www.go-jek.com/go-pay/&quot;&gt;GO-PAY&lt;/a&gt; with &lt;a href=&quot;https://gopay.com.my/&quot;&gt;GOPAY&lt;/a&gt; (Malaysia), &lt;a href=&quot;https://www.gopay.com&quot;&gt;GoPay&lt;/a&gt; (Czech Republic) and &lt;a href=&quot;https://gopay.me&quot;&gt;GoPay.me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A full list of posposed (and existing) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:&lt;/code&gt; tags are available on https://telegra.ph/Konvensi-tag-payment-di-Indonesia-04-19 , written in Bahasa Indonesia to serve as guidelines for Indonesian mappers. Note that some tags might be replaced with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:gpn_qris&lt;/code&gt; once after QRIS becomes functional.&lt;/p&gt;

&lt;h1 id=&quot;how-will-users-use-this-data&quot;&gt;How will users use this data?&lt;/h1&gt;
&lt;p&gt;On the OpenStreetMap.org website, users can look for accepted payment methods from the node/line/area details. Unfortunately, payment tag details are not available in some OSM clients and the &lt;a href=&quot;https://nominatim.openstreetmap.org&quot;&gt;Nomimatim&lt;/a&gt; website. Oh, some users might hunt for stores with discounts and cashbacks offered by digital wallet apps (currently this is a real craze in Indonesia).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://webcompat.com/uploads/2019/4/eb2f8ed7-6d21-463f-8b7e-ff6947efc9e4.jpeg&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some of the payment metadata is incorrect, and the shop was edited before the tag proposal. Major Alfamart stores now accepts cash, debit and credit cards, contactless prepaid cards Flazz (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_flazz&lt;/code&gt;), Mandiri e-money (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_mandiri_emoney&lt;/code&gt;) and BRIZZI (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_brizzi&lt;/code&gt;), as well as digital wallet service GO-PAY (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:id_gopay&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Besides that, tagging these shops may also be useful for research. For example, a &lt;a href=&quot;https://taginfo.openstreetmap.org/keys/payment:alipay&quot;&gt;TagInfo search of stores accepting Alipay&lt;/a&gt; reveals that the service is accepted outside China to serve international visitors (especially China). As one of the largest countries in the world, having a complete map of Indonesian payment systems could be beneficial for researchers to evaluate the effectiveness of payment services as one of the economy infrastructures in Indonesia.&lt;/p&gt;

&lt;p&gt;And for the OSM community, adding new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;payment:&lt;/code&gt; tags from &lt;a href=&quot;https://www.openstreetmap.org/relation/9020791&quot;&gt;Sabang&lt;/a&gt; to &lt;a href=&quot;https://www.openstreetmap.org/node/541933847&quot;&gt;Merauke&lt;/a&gt; will get them busy again.&lt;/p&gt;</content><author><name></name></author><category term="openstreetmap" /><category term="init-import" /><category term="english" /><summary type="html">This post is neither created nor endorsed by companies involved in establishment of payment systems listed below.</summary></entry></feed>